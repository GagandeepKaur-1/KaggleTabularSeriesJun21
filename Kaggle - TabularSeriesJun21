import numpy as np
import pandas as pd
import os

os.getcwd()

os.chdir("C:\\Users\\gurme\\OneDrive\\Documents\\Documents\\Gagan\\DS\\DS\\Python\\Kaggle Comps\\Tabular Series-Jun21-Kaggle")

train=pd.read_csv("train.csv")

test=pd.read_csv("test.csv")

ss=pd.read_csv("sample_submission.csv")

train.shape

test.shape

train.columns

test.columns

train.isnull().sum().sum()

test.isnull().sum().sum()



c1_cols=np.where(train.target=="Class_1")
c2_cols=np.where(train.target=="Class_2")
c3_cols=np.where(train.target=="Class_3")
c4_cols=np.where(train.target=="Class_4")
c5_cols=np.where(train.target=="Class_5")
c6_cols=np.where(train.target=="Class_6")
c7_cols=np.where(train.target=="Class_7")
c8_cols=np.where(train.target=="Class_8")
c9_cols=np.where(train.target=="Class_9")


for row in c1_cols:
    train.iloc[row]=1
for row in c2_cols:
    train.iloc[row]=2
for row in c3_cols:
    train.iloc[row]=3
for row in c4_cols:
    train.iloc[row]=4
for row in c5_cols:
    train.iloc[row]=5
for row in c6_cols:
    train.iloc[row]=6
for row in c7_cols:
    train.iloc[row]=7
for row in c8_cols:
    train.iloc[row]=8
for row in c9_cols:
    train.iloc[row]=9
    
    
#for row in mr_mean_age_cols:
   #train.iloc[row] = train.iloc[row].fillna(mr_mean_age)

train["target"].value_counts()

a=train.target.value_counts()
cols=a.index[a>30][:-1]

for col in cols:
    columns=pd.get_dummies(train.target,prefix="train",drop_first=False)
    train_1=pd.concat([train,columns],1)
del train["target"]

train["Class_1"]=np.nan
train["Class_2"]=np.nan
train["Class_3"]=np.nan
train["Class_4"]=np.nan
train["Class_5"]=np.nan
train["Class_6"]=np.nan
train["Class_7"]=np.nan
train["Class_8"]=np.nan
train["Class_9"]=np.nan

train_1.columns

train_1.head()

target_df=pd.DataFrame([train_1["train_Class_1"], train_1["train_Class_2"],train_1["train_Class_3"],
       train_1["train_Class_4"],train_1["train_Class_5"],train_1["train_Class_6"],train_1["train_Class_7"],
       train_1["train_Class_8"],train_1["train_Class_9"]])


target_df.head()

target_t=target_df.T

target_t.head()



train_x=train_1.drop(["target","train_Class_1", "train_Class_2", "train_Class_3",
       "train_Class_4", "train_Class_5", "train_Class_6", "train_Class_7",
       "train_Class_8", "train_Class_9"],axis=1)



from sklearn.ensemble import RandomForestRegressor


rf=RandomForestRegressor()

rf.fit(train_x,target_t)

predictions=rf.predict(test)

predictions.shape

predictions

test.head()

ss

t=test.id

t.dtypes

t_d=pd.DataFrame(t)

predictions_d=pd.DataFrame(predictions,columns=['Class_1', 'Class_2', 'Class_3',
       'Class_4', 'Class_5', 'Class_6', 'Class_7',
       'Class_8', 'Class_9'])

predictions_1=pd.concat([t_d,predictions_d],1)

predictions_1.head()

predictions.shape

predictions_1.to_csv("TabularSeriesJun21.csv")

